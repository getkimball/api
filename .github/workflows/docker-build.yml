name: Docker Build Upload Deploy

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:

  build_docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set Docker Tag
      id: set_docker_tag
      env:
        ECR_REPOSITORY: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.DOCKER_REPOSITORY }}
      run: |
        if [[ $GITHUB_EVENT_NAME = "pull_request" ]]; then
          echo "##[set-output name=docker_tag;]$(echo ${ECR_REPOSITORY}:pr-${GITHUB_SHA})"
        else
          echo "##[set-output name=docker_tag;]$(echo ${ECR_REPOSITORY}:${GITHUB_REF##*/}-${GITHUB_SHA})"
        fi

    - name: Build, tag, and push pull_request image to Amazon ECR
      env:
        DOCKER_TAG: ${{ steps.set_docker_tag.outputs.docker_tag }}
      run: |
        docker build -t $DOCKER_TAG .
        docker push $DOCKER_TAG

    - name: Kustomize and Deployment
      uses: getkimball/deploy-action@master
      env:
        ECR_REPOSITORY: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.DOCKER_REPOSITORY }}
        DOCKER_TAG: ${{ steps.set_docker_tag.outputs.docker_tag }}
        KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
      with:
        command: |
          pushd kubernetes/overlays/production
          kustomize edit set image ${ECR_REPOSITORY}=${DOCKER_TAG}
          popd

          kustomize build kubernetes/overlays/production > .action-deploy.yaml
          cat .action-deploy.yaml

          kubectl -n getkimball get all
          kubectl apply -f .action-deploy.yaml
